#!/usr/bin/env node
import e from"inquirer";import*as t from"fs";import{dirname as r}from"path";import{fileURLToPath as o}from"url";const c=process.cwd(),n=(e,r)=>{t.readdirSync(e).forEach(o=>{const i=`${e}/${o}`,s=t.statSync(i);if(s.isFile()){const e=t.readFileSync(i,"utf8");".npmignore"===o&&(o=".gitignore"),t.writeFileSync(`${c}/${r}/${o}`,e,"utf8")}else s.isDirectory()&&(t.mkdirSync(`${c}/${r}/${o}`),n(`${e}/${o}`,`${r}/${o}`))})},i=process.cwd(),s=r(o(import.meta.url)),a=t.readdirSync(`${s}/templates`);e.prompt([{name:"project-choice",type:"list",message:"What project template would you like to generate?",choices:a},{name:"project-name",type:"input",message:"Project name:",validate:function(e){return!!/^([A-Za-z\-\\_\d])+$/.test(e)||"Project name may only include letters, numbers, underscores and hashes."}}]).then(e=>{const r=e["project-name"],o=`${s}/templates/${e["project-choice"]}`;t.mkdirSync(`${i}/${r}`),n(o,r)});
//# sourceMappingURL=index.modern.js.map
